ðŸŒ± PlantCare Tracker

A full-stack web application for managing plant care routines, tracking watering schedules, and monitoring light requirements for your plants.

Features
Plant Management: Add/remove plants with care details
Visual Dashboard: View all plants with key metrics
Responsive Design: Works on desktop and mobile
Database Backend: SQLite database for local development
Modern UI: Built with Next.js 14 and Tailwind CSS

Project Structure
plant-care-app/
â”œâ”€â”€ backend/          # Flask API
â”‚   â”œâ”€â”€ app.py
â”‚   â”œâ”€â”€ models.py
â”‚   â”œâ”€â”€ requirements.txt
â”‚   â””â”€â”€ templates/    # Server-side rendered views
â””â”€â”€ frontend/         # Next.js application
    â”œâ”€â”€ app/          # App Router
    â”œâ”€â”€ components/   # UI Components
    â””â”€â”€ lib/          # Utilities
```

Getting Started
Prerequisites

- Python 3.10+
- Node.js 18+
- npm 9+

Local Development

1. Clone Repository.
   ```bash
   git clone https://github.com/yourusername/plant-care-app.git
   cd plant-care-app
   ```

2. Backend Setup.
   ```bash
   cd backend
   python -m venv venv
   source venv/bin/activate  # Windows: venv\Scripts\activate
   pip install -r requirements.txt
   python init_db.py
   python app.py
   ```

3. Frontend Setup.
   ```bash
   cd ../frontend
   npm install
   npm run dev
   ```

Access the app at `http://localhost:3000`

1. Create Heroku app.
   ```bash
   heroku create your-app-name
   heroku addons:create heroku-postgresql:hobby-dev
   ```

2. Add deployment files.
   ```bash
   echo "web: gunicorn app:app" > Procfile
   echo "python-3.10.11" > runtime.txt
   ```

3. Deploy.
   ```bash
   git push heroku main
   ```

1. Create `.env.local`
   ```env
   NEXT_PUBLIC_API_URL=https://your-heroku-app.herokuapp.com
   ```

2. Update `next.config.js`
   ```javascript
   module.exports = {
     output: 'export',
     images: { unoptimized: true }
   }
   ```

3. Push to GitHub and enable Pages in repository settings.

`backend/.env`
```env
FLASK_APP=app.py
FLASK_ENV=development
DATABASE_URL=sqlite:///plants.db
```

`frontend/.env.local`
```env
NEXT_PUBLIC_API_URL=your-backend-url
```

Contributing
1. Fork the Project
2. Create your Feature Branch
3. Commit your Changes
4. Push to the Branch
5. Open a Pull Request


Created with ðŸŒ¿ by [reck07]**  
[![Deploy Status](https://img.shields.io/badge/Deployment-Guide-blue)](https://your-deployment-guide.com)
```

This README includes:
- Clear installation instructions for both environments
- Deployment guides for different platforms
- Environment variable configuration
- Badges for quick status checks
- Responsive project structure visualization
- License and contribution guidelines
